version: '3'
services:
  configSrv:
    image: mongo:latest
    container_name: configSrv
    restart: always
    ports:
      - "27017:27017"
    networks:
      app-network-repl:
        ipv4_address: 172.18.0.10
    volumes:
      - config-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1_primary:
    image: mongo:latest
    container_name: shard1_primary
    restart: always
    ports:
      - "27018:27018"
    networks:
      app-network-repl:
        ipv4_address: 172.18.0.9
    volumes:
      - shard1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1_secondary1:
    image: mongo:latest
    container_name: shard1_secondary1
    restart: always
    networks:
      app-network-repl:
        ipv4_address: 172.18.0.11
    volumes:
      - shard1-data-1:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1_secondary2:
    image: mongo:latest
    container_name: shard1_secondary2
    restart: always
    networks:
      app-network-repl:
        ipv4_address: 172.18.0.12
    volumes:
      - shard1-data-2:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2_primary:
    image: mongo:latest
    container_name: shard2_primary
    restart: always
    ports:
      - "27019:27019"
    networks:
      app-network-repl:
        ipv4_address: 172.18.0.8
    volumes:
      - shard2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27019"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2_secondary1:
    image: mongo:latest
    container_name: shard2_secondary1
    restart: always
    networks:
      app-network-repl:
        ipv4_address: 172.18.0.13
    volumes:
      - shard2-data-1:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27019"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2_secondary2:
    image: mongo:latest
    container_name: shard2_secondary2
    restart: always
    networks:
      app-network-repl:
        ipv4_address: 172.18.0.14
    volumes:
      - shard2-data-2:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27019"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongos_router:
    image: mongo:latest
    container_name: mongos_router
    restart: always
    ports:
      - "27020:27020"
    networks:
      app-network-repl:
        ipv4_address: 172.18.0.7
    command:
      [
        "mongos",
        "--configdb",
        "config_server/configSrv:27017",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  pymongo_api:
    image: kazhem/pymongo_api:1.0.0
    container_name: pymongo_api
    restart: always
    ports:
      - "8000:8080"
    environment:
      MONGODB_URL: "mongodb://mongos_router:27020"
      MONGODB_DATABASE_NAME: "somedb"
    networks:
      app-network-repl:
        ipv4_address: 172.18.0.6

networks:
  app-network-repl:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/16

volumes:
  config-data:
  shard1-data:
  shard1-data-1:
  shard1-data-2:
  shard2-data:
  shard2-data-1:
  shard2-data-2:
